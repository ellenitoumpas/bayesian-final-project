
  
  # Scaling data 

  data {
    ysd <- sd(y)
    for ( i in 1:Ntotal ) {
      zy[i] <- y[i] / ysd
    }
    
    for ( j in 1:Nx ) {
      xsd[j] <-   sd(x[,j])
      for ( i in 1:Ntotal ) {
        zx[i,j] <- x[i,j] / xsd[j]
      }
    }
  }

  # Outlining the model
  model{
    for (i in 1:Ntotal) {
      zy[i] ~ dgamma((mu[i]^2)/ zVar, mu[i]/ zVar) # Use sample variance as an estimate of the population variance
      mu[i] <- zbeta0 + sum(zbeta[1:Nx] * zx[i,1:Nx])
    }
    
  zbeta0 ~ dnorm(0, 1/2^2)
  zbeta[1] ~ dnorm(-40/xsd[1], 1/(0.25/xsd[1]^2))
  zbeta[2] ~ dnorm(40/xsd[2], 1/(0.5/xsd[2]^2))
  zbeta[3] ~ dnorm(0/xsd[3], 1/(0.1/xsd[3]^2))
  zbeta[4] ~ dnorm(-40/xsd[4], 1/(0.5/xsd[4]^2))
  zbeta[5] ~ dnorm(0/xsd[5], 1/(0.1/xsd[5]^2))
  zbeta[6] ~ dnorm(20/xsd[6], 1/(0.5/xsd[6]^2))
  zbeta[7] ~ dnorm(0/xsd[7], 1/(0.1/xsd[7]^2))
  zbeta[8] ~ dnorm(20/xsd[8], 1/(0.5/xsd[8]^2))
  zVar ~ dgamma(0.01, 0.001)
  
  # Transform to original scale
  beta[1:Nx] <- (zbeta[1:Nx]/ xsd[1:Nx]) * ysd
  beta0 <- zbeta0 * ysd
  tau <- zVar * (ysd) ^ 2
  
  # Predictions
  
  pred[1] <- beta0 + beta[1] * xPred[1, 1] + beta[2] * xPred[1, 2] + beta[3] * xPred[1, 3] + beta[4] * xPred[1, 4] + beta[5] * xPred[1, 5] + beta[6] * xPred[1, 6] + beta[7] * xPred[1, 7] + beta[8] * xPred[1, 8] 
  pred[2] <- beta0 + beta[1] * xPred[2, 1] + beta[2] * xPred[2, 2] + beta[3] * xPred[2, 3] + beta[4] * xPred[2, 4] + beta[5] * xPred[2, 5] + beta[6] * xPred[2, 6] + beta[7] * xPred[2, 7] + beta[8] * xPred[2, 8] 
  pred[3] <- beta0 + beta[1] * xPred[3, 1] + beta[2] * xPred[3, 2] + beta[3] * xPred[3, 3] + beta[4] * xPred[3, 4] + beta[5] * xPred[3, 5] + beta[6] * xPred[3, 6] + beta[7] * xPred[3, 7] + beta[8] * xPred[3, 8] 
  pred[4] <- beta0 + beta[1] * xPred[4, 1] + beta[2] * xPred[4, 2] + beta[3] * xPred[4, 3] + beta[4] * xPred[4, 4] + beta[5] * xPred[4, 5] + beta[6] * xPred[4, 6] + beta[7] * xPred[4, 7] + beta[8] * xPred[4, 8] 
  pred[5] <- beta0 + beta[1] * xPred[5, 1] + beta[2] * xPred[5, 2] + beta[3] * xPred[5, 3] + beta[4] * xPred[5, 4] + beta[5] * xPred[5, 5] + beta[6] * xPred[5, 6] + beta[7] * xPred[5, 7] + beta[8] * xPred[5, 8] 

}
