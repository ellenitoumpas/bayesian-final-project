
  
  # Scaling data 

  data {
    ysd <- sd(y)
    for ( i in 1:Ntotal ) {
      zy[i] <- y[i] / ysd
    }
    
    for ( j in 1:Nx ) {
      xsd[j] <-   sd(x[,j])
      for ( i in 1:Ntotal ) {
        zx[i,j] <- x[i,j] / xsd[j]
      }
    }
  }

  # Outlining the model
  model{
    for (i in 1:Ntotal) {
      zy[i] ~ dgamma((mu[i]^2)/ zVar, zVar/mu[i]) # Use sample variance as an estimate of the population variance
	  mu[i] <- sum(zbeta[1:Nx] * zx[i,1:Nx]) + (zbeta[1] * zx[i,1]) * (zbeta[4] * zx[i,4]) + (zbeta[2] * zx[i,2]) * (zbeta[3] * zx[i,3]) + (zbeta[3] * zx[i,3]) * (zbeta[7] * zx[i,7]) + (zbeta[4] * zx[i,4]) * (zbeta[6] * zx[i,6]) + (zbeta[4] * zx[i,4]) * (zbeta[7] * zx[i,7]) + (zbeta[7] * zx[i,7]) * (zbeta[6] * zx[i,6])
    }
    
  zbeta[1] ~ dnorm(-1/xsd[1], 1/(100/xsd[1]^2))
  zbeta[2] ~ dnorm(1/xsd[2], 1/(100/xsd[2]^2))
  zbeta[3] ~ dnorm(-1/xsd[3], 1/(100/xsd[3]^2))
  zbeta[4] ~ dnorm(1/xsd[4], 1/(100/xsd[4]^2))
  zbeta[5] ~ dnorm(1/xsd[5], 1/(100/xsd[5]^2))
  zbeta[6] ~ dnorm(1/xsd[6], 1/(100/xsd[6]^2))
  zbeta[7] ~ dnorm(1/xsd[7], 1/(100/xsd[7]^2))
  zVar ~ dgamma(0.01, 0.001)
  
  # Transform to original scale
  beta[1:Nx] <- (zbeta[1:Nx]/ xsd[1:Nx]) * ysd
  tau <- zVar * (ysd) ^ 2
  
  # Predictions
  
  pred[1] <- 0 + beta[1] * xPred[1, 1]  + beta[2] * xPred[1, 2]  + beta[3] * xPred[1, 3]  + beta[4] * xPred[1, 4]  + beta[5] * xPred[1, 5] 
  pred[2] <- 0 + beta[1] * xPred[2, 1]  + beta[2] * xPred[2, 2]  + beta[3] * xPred[2, 3]  + beta[4] * xPred[2, 4]  + beta[5] * xPred[2, 5] 
  pred[3] <- 0 + beta[1] * xPred[3, 1]  + beta[2] * xPred[3, 2]  + beta[3] * xPred[3, 3]  + beta[4] * xPred[3, 4]  + beta[5] * xPred[3, 5] 
  pred[4] <- 0 + beta[1] * xPred[4, 1]  + beta[2] * xPred[4, 2]  + beta[3] * xPred[4, 3]  + beta[4] * xPred[4, 4]  + beta[5] * xPred[4, 5] 
  pred[5] <- 0 + beta[1] * xPred[5, 1]  + beta[2] * xPred[5, 2]  + beta[3] * xPred[5, 3]  + beta[4] * xPred[5, 4]  + beta[5] * xPred[5, 5] 
  pred[6] <- 0 + beta[1] * xPred[6, 1]  + beta[2] * xPred[6, 2]  + beta[3] * xPred[6, 3]  + beta[4] * xPred[6, 4]  + beta[5] * xPred[6, 5] 
  pred[7] <- 0 + beta[1] * xPred[7, 1]  + beta[2] * xPred[7, 2]  + beta[3] * xPred[7, 3]  + beta[4] * xPred[7, 4]  + beta[5] * xPred[7, 5] 
  pred[8] <- 0 + beta[1] * xPred[8, 1]  + beta[2] * xPred[8, 2]  + beta[3] * xPred[8, 3]  + beta[4] * xPred[8, 4]  + beta[5] * xPred[8, 5] 
  pred[9] <- 0 + beta[1] * xPred[9, 1]  + beta[2] * xPred[9, 2]  + beta[3] * xPred[9, 3]  + beta[4] * xPred[9, 4]  + beta[5] * xPred[9, 5] 
  pred[10] <- 0 + beta[1] * xPred[10, 1]  + beta[2] * xPred[10, 2]  + beta[3] * xPred[10, 3]  + beta[4] * xPred[10, 4]  + beta[5] * xPred[10, 5] 

}
